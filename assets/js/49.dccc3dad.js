(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{234:function(s,t,a){"use strict";a.r(t);var e=a(1),r=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"对象的类型——接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的类型——接口","aria-hidden":"true"}},[s._v("#")]),s._v(" 对象的类型——接口")]),s._v(" "),a("p",[s._v("在 TypeScript 中，我们使用接口（Interfaces）来定义对象的类型。")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"什么是接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是接口","aria-hidden":"true"}},[s._v("#")]),s._v(" 什么是接口")]),s._v(" "),a("p",[s._v("在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。")]),s._v(" "),a("p",[s._v("TypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用于对「对象的形状（Shape）」进行描述。")]),s._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" tom"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("上面的例子中，我们定义了一个接口 Person，接着定义了一个变量 tom，它的类型是 Person。这样，我们就约束了 tom 的形状必须和接口 Person 一致。")]),s._v(" "),a("p",[s._v("接口一般首字母大写。有的编程语言中会建议接口的名称加上 I 前缀。")]),s._v(" "),a("h3",{attrs:{id:"可选属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 可选属性")]),s._v(" "),a("h3",{attrs:{id:"任意属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任意属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 任意属性")]),s._v(" "),a("h3",{attrs:{id:"只读属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只读属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 只读属性")])])},[],!1,null,null,null);t.default=r.exports}}]);